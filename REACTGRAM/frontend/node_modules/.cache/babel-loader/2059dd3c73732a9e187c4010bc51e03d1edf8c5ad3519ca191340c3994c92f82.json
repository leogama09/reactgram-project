{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../services/authService\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user ? user : null,\n  error: false,\n  success: false,\n  loading: false\n};\n\n// Register an user and sign in\nexport const register = createAsyncThunk(\"auth/register\", async (user, thunkAPI) => {\n  const data = await authService.register(user);\n\n  // check for errors\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// Logout an user\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await authService.logout();\n});\n\n// Sign in an user\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\n  const data = await authService.register(user);\n\n  // check for errors\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.loading = false;\n      state.error = false;\n      state.success = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","error","success","loading","register","thunkAPI","data","errors","rejectWithValue","logout","login","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/leoga/Desktop/Backup/GitHub/reactgram-project/REACTGRAM/frontend/src/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport authService from \"../services/authService\"\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\nconst initialState = {\r\n    user: user ? user : null,\r\n    error: false,\r\n    success: false,\r\n    loading: false,\r\n}\r\n\r\n// Register an user and sign in\r\nexport const register = createAsyncThunk(\"auth/register\", \r\n    async (user, thunkAPI) => {\r\n\r\n        const data = await authService.register(user)\r\n\r\n        // check for errors\r\n        if(data.errors) {\r\n            return thunkAPI.rejectWithValue(data.errors[0])\r\n        }\r\n\r\n        return data\r\n    })\r\n\r\n    // Logout an user\r\n    export const logout = createAsyncThunk(\"auth/logout\", async () => {\r\n        await authService.logout()\r\n    })\r\n\r\n    // Sign in an user\r\n    export const login = createAsyncThunk(\r\n        \"auth/login\", \r\n        async (user, thunkAPI) => {\r\n\r\n    const data = await authService.register(user)\r\n\r\n    // check for errors\r\n    if(data.errors) {\r\n        return thunkAPI.rejectWithValue(data.errors[0])\r\n    }\r\n\r\n    return data\r\n})\r\n\r\n    export const authSlice = createSlice({\r\n        name: \"auth\",\r\n        initialState,\r\n        reducers: {\r\n            reset: (state) => {\r\n                state.loading = false\r\n                state.error = false\r\n                state.success = false\r\n            },\r\n        },\r\n        extraReducers: (builder) => {\r\n            builder\r\n            .addCase(register.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(register.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.user = action.payload\r\n            })\r\n            .addCase(register.rejected, (state, action) => {\r\n                state.loading = false\r\n                state.error = action.payload\r\n                state.user = null\r\n            })\r\n            .addCase(logout.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.user = null\r\n            })\r\n        },\r\n    })\r\n\r\n    export const { reset } = authSlice.actions\r\n    export default authSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}