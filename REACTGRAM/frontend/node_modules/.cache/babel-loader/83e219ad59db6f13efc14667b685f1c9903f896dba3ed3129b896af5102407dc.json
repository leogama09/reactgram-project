{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport userService from '../services/userService';\nconst initialState = {\n  user: {},\n  error: false,\n  success: false,\n  loading: false,\n  message: null\n};\n\n// Get user details\nexport const profile = createAsyncThunk(\"user/profile\", async (user, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await userService.profile(user, token);\n  return data;\n});\n\n// Update user details\nexport const updateProfile = createAsyncThunk(\"user/update\", async (user, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await userService.updateProfile(user, token);\n\n  // Check for errors\n  if (data.error) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// Get user details\nexport const getUserDetails = createAsyncThunk(\"user/get\", async (id, thunkAPI) => {\n  const data = await userService.getUserDetails(id);\n  return data;\n});\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    resetMessage: state => {\n      state.message = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(profile.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(profile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    }).addCase(updateProfile.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n      state.message = \"Usuário atualizado com sucesso!\";\n    }).addCase(updateProfile.rejected, (state, action) => {\n      console.log(state, action);\n      state.loading = false;\n      state.error = action.payload;\n      state.user = null;\n    }).addCase(getUserDetails.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(getUserDetails.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    });\n  }\n});\nexport const {\n  resetMessage\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userService","initialState","user","error","success","loading","message","profile","thunkAPI","token","getState","auth","data","updateProfile","rejectWithValue","errors","getUserDetails","id","userSlice","name","reducers","resetMessage","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","console","log","actions","reducer"],"sources":["C:/Users/leoga/Desktop/Backup/GitHub/reactgram-project/REACTGRAM/frontend/src/slices/userSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\r\nimport userService from '../services/userService'\r\n\r\nconst initialState = {\r\n    user: {},\r\n    error: false,\r\n    success: false,\r\n    loading: false,\r\n    message: null\r\n}\r\n\r\n// Get user details\r\nexport const profile = createAsyncThunk(\r\n    \"user/profile\",\r\n    async (user, thunkAPI) => {\r\n\r\n        const token = thunkAPI.getState().auth.user.token\r\n\r\n        const data = await userService.profile(user, token)\r\n\r\n        return data\r\n\r\n    }\r\n)\r\n\r\n// Update user details\r\nexport const updateProfile = createAsyncThunk(\r\n    \"user/update\",\r\n    async(user, thunkAPI) => {\r\n        const token = thunkAPI.getState().auth.user.token\r\n\r\n        const data = await userService.updateProfile(user, token)\r\n\r\n        // Check for errors\r\n        if(data.error) {\r\n            return thunkAPI.rejectWithValue(data.errors[0])\r\n        }\r\n\r\n        return data\r\n    }\r\n)\r\n\r\n// Get user details\r\nexport const getUserDetails = createAsyncThunk(\r\n    \"user/get\",\r\n    async(id, thunkAPI) => {\r\n\r\n        const data = await userService.getUserDetails(id)\r\n\r\n        return data\r\n\r\n    }\r\n)\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n        resetMessage: (state) => {\r\n            state.message = null\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(profile.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(profile.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.user = action.payload\r\n            })\r\n            .addCase(updateProfile.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(updateProfile.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.user = action.payload\r\n                state.message = \"Usuário atualizado com sucesso!\"\r\n            })\r\n            .addCase(updateProfile.rejected, (state, action) => {\r\n                console.log(state, action)\r\n                state.loading = false\r\n                state.error = action.payload\r\n                state.user = (null)\r\n            })\r\n            .addCase(getUserDetails.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(getUserDetails.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.user = action.payload\r\n            })\r\n    }\r\n})\r\n\r\nexport const {resetMessage} = userSlice.actions\r\nexport default userSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}