{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport photoService from \"../services/photoService\";\nconst initialState = {\n  photos: [],\n  photo: {},\n  error: false,\n  success: false,\n  loading: false,\n  message: null\n};\n\n// Publish user photo\nexport const publishPhoto = createAsyncThunk(\"photo/publish\", async (photo, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.publishPhoto(photo, token);\n\n  // Check for errors\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// Get user photos\nexport const getUserPhotos = createAsyncThunk(\"photo/userphotos\", async (id, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.getUserPhotos(id, token);\n  return data;\n});\n\n// Delete a photo\nexport const deletePhoto = createAsyncThunk(\"photo/delete\", async (id, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.deletePhoto(id, token);\n\n  // Check for errors\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// Update a photo\nexport const updatePhoto = createAsyncThunk(\"photo/update\", async (photoData, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.updatePhoto({\n    title: photoData.title\n  }, photoData.id, token);\n\n  // Check for errors\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// Get photo by id\nexport const getPhoto = createAsyncThunk(\"photo//getphoto\", async (id, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.getPhoto(id, token);\n\n  // Check for errors\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n  return data;\n});\n\n// Like a photo\nexport const like = createAsyncThunk(\"photo/like\", async (id, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.like(id, token);\n  return data;\n});\nexport const photoSlice = createSlice({\n  name: \"photo\",\n  initialState,\n  reducers: {\n    resetMessage: state => {\n      state.message = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(publishPhoto.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(publishPhoto.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photo = action.payload;\n      state.photos.unshift(state.photo);\n      state.message = \"Foto publicada com sucesso!\";\n    }).addCase(publishPhoto.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.photo = {};\n    }).addCase(getUserPhotos.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(getUserPhotos.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photo = action.payload;\n    }).addCase(deletePhoto.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(deletePhoto.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photos = state.photos.filter(photo => {\n        return photo._id !== action.payload.id;\n      });\n      state.message = action.payload.message;\n    }).addCase(deletePhoto.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.photo = {};\n    }).addCase(updatePhoto.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(updatePhoto.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photos.map(photo => {\n        if (photo._id === action.payload.photo._id) {\n          return photo.title = action.payload.photo.title;\n        }\n        return photo;\n      });\n      state.message = action.payload.message;\n    }).addCase(updatePhoto.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.photo = {};\n    }).addCase(getPhoto.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(getPhoto.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photo = action.payload;\n    });\n  }\n});\nexport const {\n  resetMessage\n} = photoSlice.actions;\nexport default photoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","photoService","initialState","photos","photo","error","success","loading","message","publishPhoto","thunkAPI","token","getState","auth","user","data","errors","rejectWithValue","getUserPhotos","id","deletePhoto","updatePhoto","photoData","title","getPhoto","like","photoSlice","name","reducers","resetMessage","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","unshift","rejected","filter","_id","map","actions","reducer"],"sources":["C:/Users/leoga/Desktop/Backup/GitHub/reactgram-project/REACTGRAM/frontend/src/slices/photoSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\"\r\nimport photoService from \"../services/photoService\"\r\n\r\nconst initialState = {\r\n    photos: [],\r\n    photo: {},\r\n    error: false,\r\n    success: false,\r\n    loading: false,\r\n    message: null\r\n}\r\n\r\n// Publish user photo\r\nexport const publishPhoto = createAsyncThunk(\r\n    \"photo/publish\",\r\n    async(photo, thunkAPI) => {\r\n        const token = thunkAPI.getState().auth.user.token\r\n\r\n        const data = await photoService.publishPhoto(photo, token)\r\n\r\n        // Check for errors\r\n        if(data.errors) {\r\n            return thunkAPI.rejectWithValue(data.errors[0])\r\n        }\r\n\r\n        return data\r\n    }\r\n)\r\n\r\n// Get user photos\r\nexport const getUserPhotos = createAsyncThunk(\r\n    \"photo/userphotos\",\r\n    async(id, thunkAPI) => {\r\n\r\n        const token = thunkAPI.getState().auth.user.token\r\n\r\n        const data = await photoService.getUserPhotos(id, token)\r\n\r\n        return data\r\n    }\r\n)\r\n\r\n// Delete a photo\r\nexport const deletePhoto = createAsyncThunk(\r\n    \"photo/delete\",\r\n    async(id, thunkAPI) => {\r\n\r\n        const token = thunkAPI.getState().auth.user.token\r\n\r\n        const data = await photoService.deletePhoto(id, token)\r\n\r\n        // Check for errors\r\n        if(data.errors) {\r\n            return thunkAPI.rejectWithValue(data.errors[0])\r\n        }\r\n\r\n        return data\r\n    }\r\n)\r\n\r\n// Update a photo\r\nexport const updatePhoto = createAsyncThunk(\r\n    \"photo/update\",\r\n    async (photoData, thunkAPI) => {\r\n        const token = thunkAPI.getState().auth.user.token\r\n\r\n        const data = await photoService.updatePhoto(\r\n            { title: photoData.title }, \r\n            photoData.id, \r\n            token\r\n        )\r\n\r\n        // Check for errors\r\n        if(data.errors) {\r\n            return thunkAPI.rejectWithValue(data.errors[0])\r\n        }\r\n\r\n        return data\r\n\r\n    }\r\n)\r\n\r\n// Get photo by id\r\nexport const getPhoto = createAsyncThunk(\r\n    \"photo//getphoto\", \r\n    async(id, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token\r\n\r\n    const data = await photoService.getPhoto(id, token)\r\n\r\n    // Check for errors\r\n    if(data.errors) {\r\n        return thunkAPI.rejectWithValue(data.errors[0])\r\n    }\r\n\r\n    return data\r\n\r\n    return data\r\n})\r\n\r\n// Like a photo\r\nexport const like = createAsyncThunk(\"photo/like\", async(id, thunkAPI) => {\r\n\r\n    const token = thunkAPI.getState().auth.user.token\r\n\r\n    const data = await photoService.like(id, token)\r\n\r\n    return data\r\n\r\n})\r\n\r\nexport const photoSlice = createSlice({\r\n    name: \"photo\",\r\n    initialState,\r\n    reducers: {\r\n        resetMessage: (state) => {\r\n            state.message = null\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(publishPhoto.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(publishPhoto.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.photo = action.payload\r\n                state.photos.unshift(state.photo)\r\n                state.message = \"Foto publicada com sucesso!\"\r\n            })\r\n            .addCase(publishPhoto.rejected, (state, action) => {\r\n                state.loading = false\r\n                state.error = action.payload\r\n                state.photo = {}\r\n            })\r\n            .addCase(getUserPhotos.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(getUserPhotos.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.photo = action.payload\r\n            })\r\n            .addCase(deletePhoto.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(deletePhoto.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                \r\n                state.photos = state.photos.filter((photo) => {\r\n                    return photo._id !== action.payload.id\r\n                })\r\n\r\n                state.message = action.payload.message\r\n            })\r\n            .addCase(deletePhoto.rejected, (state, action) => {\r\n                state.loading = false\r\n                state.error = action.payload\r\n                state.photo = {}\r\n            })\r\n            .addCase(updatePhoto.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(updatePhoto.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                \r\n                state.photos.map((photo) => {\r\n                    if(photo._id === action.payload.photo._id) {\r\n                        return photo.title = action.payload.photo.title\r\n                    }\r\n                    return photo\r\n                })\r\n\r\n                state.message = action.payload.message\r\n            })\r\n            .addCase(updatePhoto.rejected, (state, action) => {\r\n                state.loading = false\r\n                state.error = action.payload\r\n                state.photo = {}\r\n            })\r\n            .addCase(getPhoto.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(getPhoto.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.photo = action.payload\r\n            })\r\n            \r\n    },\r\n})\r\n\r\nexport const {resetMessage} = photoSlice.actions\r\nexport default photoSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,CAAC,CAAC;EACTC,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACb,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAGT,gBAAgB,CACxC,eAAe,EACf,OAAMI,KAAK,EAAEM,QAAQ,KAAK;EACtB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,EAAE,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;EAEjD,MAAMI,IAAI,GAAG,MAAMd,YAAY,CAACQ,YAAY,CAACL,KAAK,EAAEO,KAAK,CAAC;;EAE1D;EACA,IAAGI,IAAI,CAACC,MAAM,EAAE;IACZ,OAAON,QAAQ,CAACO,eAAe,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EACnD;EAEA,OAAOD,IAAI;AACf,CAAC,CACJ;;AAED;AACA,OAAO,MAAMG,aAAa,GAAGlB,gBAAgB,CACzC,kBAAkB,EAClB,OAAMmB,EAAE,EAAET,QAAQ,KAAK;EAEnB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,EAAE,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;EAEjD,MAAMI,IAAI,GAAG,MAAMd,YAAY,CAACiB,aAAa,CAACC,EAAE,EAAER,KAAK,CAAC;EAExD,OAAOI,IAAI;AACf,CAAC,CACJ;;AAED;AACA,OAAO,MAAMK,WAAW,GAAGpB,gBAAgB,CACvC,cAAc,EACd,OAAMmB,EAAE,EAAET,QAAQ,KAAK;EAEnB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,EAAE,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;EAEjD,MAAMI,IAAI,GAAG,MAAMd,YAAY,CAACmB,WAAW,CAACD,EAAE,EAAER,KAAK,CAAC;;EAEtD;EACA,IAAGI,IAAI,CAACC,MAAM,EAAE;IACZ,OAAON,QAAQ,CAACO,eAAe,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EACnD;EAEA,OAAOD,IAAI;AACf,CAAC,CACJ;;AAED;AACA,OAAO,MAAMM,WAAW,GAAGrB,gBAAgB,CACvC,cAAc,EACd,OAAOsB,SAAS,EAAEZ,QAAQ,KAAK;EAC3B,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,EAAE,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;EAEjD,MAAMI,IAAI,GAAG,MAAMd,YAAY,CAACoB,WAAW,CACvC;IAAEE,KAAK,EAAED,SAAS,CAACC;EAAM,CAAC,EAC1BD,SAAS,CAACH,EAAE,EACZR,KAAK,CACR;;EAED;EACA,IAAGI,IAAI,CAACC,MAAM,EAAE;IACZ,OAAON,QAAQ,CAACO,eAAe,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EACnD;EAEA,OAAOD,IAAI;AAEf,CAAC,CACJ;;AAED;AACA,OAAO,MAAMS,QAAQ,GAAGxB,gBAAgB,CACpC,iBAAiB,EACjB,OAAMmB,EAAE,EAAET,QAAQ,KAAK;EACvB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,EAAE,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;EAEjD,MAAMI,IAAI,GAAG,MAAMd,YAAY,CAACuB,QAAQ,CAACL,EAAE,EAAER,KAAK,CAAC;;EAEnD;EACA,IAAGI,IAAI,CAACC,MAAM,EAAE;IACZ,OAAON,QAAQ,CAACO,eAAe,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EACnD;EAEA,OAAOD,IAAI;EAEX,OAAOA,IAAI;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMU,IAAI,GAAGzB,gBAAgB,CAAC,YAAY,EAAE,OAAMmB,EAAE,EAAET,QAAQ,KAAK;EAEtE,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,EAAE,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;EAEjD,MAAMI,IAAI,GAAG,MAAMd,YAAY,CAACwB,IAAI,CAACN,EAAE,EAAER,KAAK,CAAC;EAE/C,OAAOI,IAAI;AAEf,CAAC,CAAC;AAEF,OAAO,MAAMW,UAAU,GAAG3B,WAAW,CAAC;EAClC4B,IAAI,EAAE,OAAO;EACbzB,YAAY;EACZ0B,QAAQ,EAAE;IACNC,YAAY,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACtB,OAAO,GAAG,IAAI;IACxB;EACJ,CAAC;EACDuB,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACxB,YAAY,CAACyB,OAAO,EAAGJ,KAAK,IAAK;MACtCA,KAAK,CAACvB,OAAO,GAAG,IAAI;MACpBuB,KAAK,CAACzB,KAAK,GAAG,KAAK;IACvB,CAAC,CAAC,CACD4B,OAAO,CAACxB,YAAY,CAAC0B,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAChDN,KAAK,CAACvB,OAAO,GAAG,KAAK;MACrBuB,KAAK,CAACxB,OAAO,GAAG,IAAI;MACpBwB,KAAK,CAACzB,KAAK,GAAG,IAAI;MAClByB,KAAK,CAAC1B,KAAK,GAAGgC,MAAM,CAACC,OAAO;MAC5BP,KAAK,CAAC3B,MAAM,CAACmC,OAAO,CAACR,KAAK,CAAC1B,KAAK,CAAC;MACjC0B,KAAK,CAACtB,OAAO,GAAG,6BAA6B;IACjD,CAAC,CAAC,CACDyB,OAAO,CAACxB,YAAY,CAAC8B,QAAQ,EAAE,CAACT,KAAK,EAAEM,MAAM,KAAK;MAC/CN,KAAK,CAACvB,OAAO,GAAG,KAAK;MACrBuB,KAAK,CAACzB,KAAK,GAAG+B,MAAM,CAACC,OAAO;MAC5BP,KAAK,CAAC1B,KAAK,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC,CACD6B,OAAO,CAACf,aAAa,CAACgB,OAAO,EAAGJ,KAAK,IAAK;MACvCA,KAAK,CAACvB,OAAO,GAAG,IAAI;MACpBuB,KAAK,CAACzB,KAAK,GAAG,KAAK;IACvB,CAAC,CAAC,CACD4B,OAAO,CAACf,aAAa,CAACiB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACjDN,KAAK,CAACvB,OAAO,GAAG,KAAK;MACrBuB,KAAK,CAACxB,OAAO,GAAG,IAAI;MACpBwB,KAAK,CAACzB,KAAK,GAAG,IAAI;MAClByB,KAAK,CAAC1B,KAAK,GAAGgC,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDJ,OAAO,CAACb,WAAW,CAACc,OAAO,EAAGJ,KAAK,IAAK;MACrCA,KAAK,CAACvB,OAAO,GAAG,IAAI;MACpBuB,KAAK,CAACzB,KAAK,GAAG,KAAK;IACvB,CAAC,CAAC,CACD4B,OAAO,CAACb,WAAW,CAACe,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC/CN,KAAK,CAACvB,OAAO,GAAG,KAAK;MACrBuB,KAAK,CAACxB,OAAO,GAAG,IAAI;MACpBwB,KAAK,CAACzB,KAAK,GAAG,IAAI;MAElByB,KAAK,CAAC3B,MAAM,GAAG2B,KAAK,CAAC3B,MAAM,CAACqC,MAAM,CAAEpC,KAAK,IAAK;QAC1C,OAAOA,KAAK,CAACqC,GAAG,KAAKL,MAAM,CAACC,OAAO,CAAClB,EAAE;MAC1C,CAAC,CAAC;MAEFW,KAAK,CAACtB,OAAO,GAAG4B,MAAM,CAACC,OAAO,CAAC7B,OAAO;IAC1C,CAAC,CAAC,CACDyB,OAAO,CAACb,WAAW,CAACmB,QAAQ,EAAE,CAACT,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACvB,OAAO,GAAG,KAAK;MACrBuB,KAAK,CAACzB,KAAK,GAAG+B,MAAM,CAACC,OAAO;MAC5BP,KAAK,CAAC1B,KAAK,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC,CACD6B,OAAO,CAACZ,WAAW,CAACa,OAAO,EAAGJ,KAAK,IAAK;MACrCA,KAAK,CAACvB,OAAO,GAAG,IAAI;MACpBuB,KAAK,CAACzB,KAAK,GAAG,KAAK;IACvB,CAAC,CAAC,CACD4B,OAAO,CAACZ,WAAW,CAACc,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC/CN,KAAK,CAACvB,OAAO,GAAG,KAAK;MACrBuB,KAAK,CAACxB,OAAO,GAAG,IAAI;MACpBwB,KAAK,CAACzB,KAAK,GAAG,IAAI;MAElByB,KAAK,CAAC3B,MAAM,CAACuC,GAAG,CAAEtC,KAAK,IAAK;QACxB,IAAGA,KAAK,CAACqC,GAAG,KAAKL,MAAM,CAACC,OAAO,CAACjC,KAAK,CAACqC,GAAG,EAAE;UACvC,OAAOrC,KAAK,CAACmB,KAAK,GAAGa,MAAM,CAACC,OAAO,CAACjC,KAAK,CAACmB,KAAK;QACnD;QACA,OAAOnB,KAAK;MAChB,CAAC,CAAC;MAEF0B,KAAK,CAACtB,OAAO,GAAG4B,MAAM,CAACC,OAAO,CAAC7B,OAAO;IAC1C,CAAC,CAAC,CACDyB,OAAO,CAACZ,WAAW,CAACkB,QAAQ,EAAE,CAACT,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACvB,OAAO,GAAG,KAAK;MACrBuB,KAAK,CAACzB,KAAK,GAAG+B,MAAM,CAACC,OAAO;MAC5BP,KAAK,CAAC1B,KAAK,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC,CACD6B,OAAO,CAACT,QAAQ,CAACU,OAAO,EAAGJ,KAAK,IAAK;MAClCA,KAAK,CAACvB,OAAO,GAAG,IAAI;MACpBuB,KAAK,CAACzB,KAAK,GAAG,KAAK;IACvB,CAAC,CAAC,CACD4B,OAAO,CAACT,QAAQ,CAACW,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC5CN,KAAK,CAACvB,OAAO,GAAG,KAAK;MACrBuB,KAAK,CAACxB,OAAO,GAAG,IAAI;MACpBwB,KAAK,CAACzB,KAAK,GAAG,IAAI;MAClByB,KAAK,CAAC1B,KAAK,GAAGgC,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EAEV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACR;AAAY,CAAC,GAAGH,UAAU,CAACiB,OAAO;AAChD,eAAejB,UAAU,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}